# Generated by Django 5.1.6 on 2025-04-14 14:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(default='No Name Provided', max_length=255)),
                ('college_email', models.EmailField(default='noemail@poornima.org', max_length=254, unique=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('bio', models.TextField(blank=True, null=True)),
                ('college', models.CharField(choices=[('PCE', 'PCE'), ('PIET', 'PIET'), ('PU', 'PU')], max_length=50)),
                ('department', models.CharField(choices=[('CORE', 'CORE'), ('ECE', 'ECE'), ('Cyber Security', 'Cyber Security'), ('IT', 'IT'), ('Civil', 'Civil'), ('Mechanical', 'Mechanical'), ('Electrical', 'Electrical')], max_length=50)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('dob', models.DateField(default='2000-01-01')),
                ('otp_verified', models.BooleanField(default=False)),
                ('has_answered_questionnaire', models.BooleanField(default=False)),
                ('is_profile_locked', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserQuestionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hobbies', models.TextField(blank=True)),
                ('college_events', models.TextField(blank=True)),
                ('weekend_plans', models.TextField(blank=True)),
                ('friendship_values', models.TextField(blank=True)),
                ('content_posting', models.TextField(blank=True)),
                ('college_excitements', models.TextField(blank=True)),
                ('learning_preferences', models.TextField(blank=True)),
                ('relaxation_methods', models.TextField(blank=True)),
                ('introvert_extrovert', models.CharField(choices=[('Introvert', 'Introvert'), ('Extrovert', 'Extrovert'), ('Ambivert', 'Ambivert'), ('Shy', 'Shy')], max_length=100)),
                ('first_meet', models.CharField(choices=[('Canteen chai', 'Canteen chai'), ('Library talk', 'Library talk'), ('Random walk', 'Random walk'), ('Event hangout', 'Event hangout'), ('Virtual hangout (online)', 'Virtual hangout (online)')], max_length=100)),
                ('sleep_type', models.CharField(choices=[('Night owl', 'Night owl'), ('Early bird', 'Early bird'), ('Neither, depends on my mood', 'Neither, depends on my mood')], max_length=100)),
                ('important_trait', models.CharField(choices=[('Looks', 'Looks'), ('Vibe', 'Vibe'), ('Communication', 'Communication'), ('Ambition', 'Ambition'), ('Humor', 'Humor')], max_length=100)),
                ('year', models.CharField(choices=[('1st Year', '1st Year'), ('2nd Year', '2nd Year'), ('3rd Year', '3rd Year'), ('Final Year', 'Final Year'), ('Postgraduate', 'Postgraduate')], max_length=100)),
                ('comm_style', models.CharField(choices=[('Dry Texter', 'Dry Texter'), ('Emojis & Memes', 'Emojis & Memes'), ('Deep Conversations', 'Deep Conversations'), ('Voice Notes Lover', 'Voice Notes Lover'), ('Frequent Calls', 'Frequent Calls')], max_length=100)),
                ('posting_frequency', models.CharField(choices=[('Rarely', 'Rarely'), ('Occasionally', 'Occasionally'), ('Frequently', 'Frequently'), ('Almost daily', 'Almost daily'), ('Only when I have something important to share', 'Only when I have something important to share')], max_length=100)),
                ('decision_style', models.CharField(choices=[('Logically', 'Logically'), ('Emotionally', 'Emotionally'), ('Mix of both', 'Mix of both'), ('Impulsive', 'Impulsive')], max_length=100)),
                ('free_time', models.CharField(choices=[('Alone, doing my own thing', 'Alone, doing my own thing'), ('Hanging with friends', 'Hanging with friends'), ('Exploring new activities', 'Exploring new activities'), ('Doing something creative (art, writing, etc.)', 'Doing something creative (art, writing, etc.)')], max_length=100)),
                ('relationship_status', models.CharField(choices=[('Single', 'Single'), ('Taken', 'Taken'), ('It’s complicated', 'It’s complicated'), ('Not telling', 'Not telling'), ('In an open relationship', 'In an open relationship')], max_length=100)),
                ('dating_approach', models.CharField(choices=[('I like to take things slow', 'I like to take things slow'), ('I dive in quickly and see where it goes', 'I dive in quickly and see where it goes'), ('I prefer long-term commitment', 'I prefer long-term commitment'), ('I’m just here for fun', 'I’m just here for fun')], max_length=100)),
                ('compatibility', models.CharField(choices=[('Very important', 'Very important'), ('Somewhat important', 'Somewhat important'), ('I’m open to exploring any kind of relationship', 'I’m open to exploring any kind of relationship'), ('Not important at all', 'Not important at all')], max_length=100)),
                ('similar_interests', models.CharField(choices=[('Yes, definitely', 'Yes, definitely'), ('I’m open to different interests', 'I’m open to different interests'), ('I prefer finding someone with unique interests', 'I prefer finding someone with unique interests')], max_length=100)),
                ('relationship_view', models.CharField(choices=[('Serious commitment', 'Serious commitment'), ('Fun and casual', 'Fun and casual'), ('I’m unsure', 'I’m unsure'), ('Just enjoying the journey', 'Just enjoying the journey')], max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='questionnaire', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Crush',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_mutual', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crushes_received', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crushes_sent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('sender', 'receiver')},
            },
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendships_from', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendships_to', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user1', 'user2')},
            },
        ),
    ]
